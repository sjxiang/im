// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package usercenter

import (
	"context"

	"im/app/user/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	FindUserReq     = pb.FindUserReq
	FindUserResp    = pb.FindUserResp
	GetUserInfoReq  = pb.GetUserInfoReq
	GetUserInfoResp = pb.GetUserInfoResp
	LoginReq        = pb.LoginReq
	LoginResp       = pb.LoginResp
	RegisterReq     = pb.RegisterReq
	RegisterResp    = pb.RegisterResp
	Request         = pb.Request
	Response        = pb.Response
	User            = pb.User

	UserCenter interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
		Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginResp, error)
		Register(ctx context.Context, in *RegisterReq, opts ...grpc.CallOption) (*RegisterResp, error)
		GetUserInfo(ctx context.Context, in *GetUserInfoReq, opts ...grpc.CallOption) (*GetUserInfoResp, error)
		FindUser(ctx context.Context, in *FindUserReq, opts ...grpc.CallOption) (*FindUserResp, error)
	}

	defaultUserCenter struct {
		cli zrpc.Client
	}
)

func NewUserCenter(cli zrpc.Client) UserCenter {
	return &defaultUserCenter{
		cli: cli,
	}
}

func (m *defaultUserCenter) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := pb.NewUserCenterClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}

func (m *defaultUserCenter) Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginResp, error) {
	client := pb.NewUserCenterClient(m.cli.Conn())
	return client.Login(ctx, in, opts...)
}

func (m *defaultUserCenter) Register(ctx context.Context, in *RegisterReq, opts ...grpc.CallOption) (*RegisterResp, error) {
	client := pb.NewUserCenterClient(m.cli.Conn())
	return client.Register(ctx, in, opts...)
}

func (m *defaultUserCenter) GetUserInfo(ctx context.Context, in *GetUserInfoReq, opts ...grpc.CallOption) (*GetUserInfoResp, error) {
	client := pb.NewUserCenterClient(m.cli.Conn())
	return client.GetUserInfo(ctx, in, opts...)
}

func (m *defaultUserCenter) FindUser(ctx context.Context, in *FindUserReq, opts ...grpc.CallOption) (*FindUserResp, error) {
	client := pb.NewUserCenterClient(m.cli.Conn())
	return client.FindUser(ctx, in, opts...)
}
