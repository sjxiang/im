// Code generated by goctl. DO NOT EDIT.
// Source: social.proto

package server

import (
	"context"

	"im/app/social/cmd/rpc/internal/logic"
	"im/app/social/cmd/rpc/internal/svc"
	"im/app/social/cmd/rpc/pb"
)

type SocialServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedSocialServer
}

func NewSocialServer(svcCtx *svc.ServiceContext) *SocialServer {
	return &SocialServer{
		svcCtx: svcCtx,
	}
}

// 1、添加好友
func (s *SocialServer) FriendApply(ctx context.Context, in *pb.FriendApplyReq) (*pb.FriendApplyResp, error) {
	l := logic.NewFriendApplyLogic(ctx, s.svcCtx)
	return l.FriendApply(in)
}

// 2、处理好友申请
func (s *SocialServer) FriendApplyHandle(ctx context.Context, in *pb.FriendApplyHandleReq) (*pb.FriendApplyHandleResp, error) {
	l := logic.NewFriendApplyHandleLogic(ctx, s.svcCtx)
	return l.FriendApplyHandle(in)
}

// 3、列出好友申请
func (s *SocialServer) ListFriendApply(ctx context.Context, in *pb.FriendApplyListReq) (*pb.FriendApplyListResp, error) {
	l := logic.NewListFriendApplyLogic(ctx, s.svcCtx)
	return l.ListFriendApply(in)
}

// 4、列出好友
func (s *SocialServer) ListFriend(ctx context.Context, in *pb.ListFriendReq) (*pb.ListFriendResp, error) {
	l := logic.NewListFriendLogic(ctx, s.svcCtx)
	return l.ListFriend(in)
}

// 1. 创建群组
func (s *SocialServer) GroupCreate(ctx context.Context, in *pb.GroupCreateReq) (*pb.GroupCreateResp, error) {
	l := logic.NewGroupCreateLogic(ctx, s.svcCtx)
	return l.GroupCreate(in)
}

// 2. 添加群众
func (s *SocialServer) GroupApply(ctx context.Context, in *pb.GroupApplyReq) (*pb.GroupApplyResp, error) {
	l := logic.NewGroupApplyLogic(ctx, s.svcCtx)
	return l.GroupApply(in)
}

// 3、列出群组申请
func (s *SocialServer) ListGroupApply(ctx context.Context, in *pb.ListGroupApplyReq) (*pb.ListGroupApplyResp, error) {
	l := logic.NewListGroupApplyLogic(ctx, s.svcCtx)
	return l.ListGroupApply(in)
}

// 4. 处理加群申请
func (s *SocialServer) GroupApplyHandle(ctx context.Context, in *pb.GroupApplyHandleReq) (*pb.GroupApplyHandleResp, error) {
	l := logic.NewGroupApplyHandleLogic(ctx, s.svcCtx)
	return l.GroupApplyHandle(in)
}

// 5. 列出群组
func (s *SocialServer) ListGroup(ctx context.Context, in *pb.ListGroupReq) (*pb.ListGroupResp, error) {
	l := logic.NewListGroupLogic(ctx, s.svcCtx)
	return l.ListGroup(in)
}

// 6. 列出群成员
func (s *SocialServer) ListGroupMember(ctx context.Context, in *pb.ListGroupMemberReq) (*pb.ListGroupMemberResp, error) {
	l := logic.NewListGroupMemberLogic(ctx, s.svcCtx)
	return l.ListGroupMember(in)
}
